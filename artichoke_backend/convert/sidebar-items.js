window.SIDEBAR_ITEMS = {"enum":[["ConvertOnError","Strategy to use for handling errors in [`convert_type`]."],["MaybeToInt",""]],"fn":[["check_string_type",""],["check_to_a","Fallible coercion of the given value to a Ruby `Array` or `nil` via `#to_a`."],["check_to_ary","Fallible conversion of the given value to a Ruby `Array` or `nil` via `#to_ary`."],["check_to_int","Fallible conversion of the given value to a Ruby `Integer` or `nil` via `#to_int`."],["check_to_str","Fallible conversion of the given value to a Ruby `String` or `nil` via `#to_str`."],["convert_type","Attempt a fallible conversion of a Ruby value to a given type tag."],["float_to_int","Convert a [`f64`] to an [`i64`] by rounding toward zero."],["implicitly_convert_to_int","Attempt to implicitly convert a [`Value`] to an integer."],["implicitly_convert_to_nilable_string","Attempt to implicitly convert a [`Value`] to an optional byte slice (nilable Ruby `String`)."],["implicitly_convert_to_spinoso_string","Attempt to implicitly convert a [`Value`] to a [`spinoso_string::String`] (Ruby `String`)."],["implicitly_convert_to_string","Attempt to implicitly convert a [`Value`] to a byte slice (Ruby `String`)."],["maybe_to_int","Attempt a fallible conversion of the given value to `i64`."],["to_a","Fallible coercion of the given value to a Ruby `Array` via `#to_a`."],["to_ary","Fallible conversion of the given value to a Ruby `Array` via `#to_ary`."],["to_i","Fallible coercion of the given value to a Ruby `Integer` via `#to_i`."],["to_int","Fallible conversion of the given value to a Ruby `Integer` via `#to_int`."],["to_str","Fallible conversion of the given value to a Ruby `String` via `#to_str`."]],"struct":[["BoxIntoRubyError","Failed to convert from Rust type to a boxed Ruby value."],["HeapAllocated",""],["Immediate",""],["UnboxRubyError","Failed to convert from boxed Ruby value to a Rust type."],["UnboxedValueGuard",""]],"trait":[["BoxUnboxVmValue",""],["HeapAllocatedData",""]]};