window.SIDEBAR_ITEMS = {"enum":[["Ruby","Classes of Ruby types."]],"struct":[["ArgumentError","Ruby `ArgumentError` error type."],["Artichoke","Interpreter instance."],["EOFError","Ruby `EOFError` error type."],["EncodingError","Ruby `EncodingError` error type."],["Exception","Ruby `Exception` error type."],["Fatal","Ruby `fatal` error type."],["FiberError","Ruby `FiberError` error type."],["FloatDomainError","Ruby `FloatDomainError` error type."],["FrozenError","Ruby `FrozenError` error type."],["Guard","Interpreter guard that prepares an [`Artichoke`] to re-enter an FFI boundary."],["IOError","Ruby `IOError` error type."],["IndexError","Ruby `IndexError` error type."],["Interrupt","Ruby `Interrupt` error type."],["KeyError","Ruby `KeyError` error type."],["LoadError","Ruby `LoadError` error type."],["LocalJumpError","Ruby `LocalJumpError` error type."],["NameError","Ruby `NameError` error type."],["NoMemoryError","Ruby `NoMemoryError` error type."],["NoMethodError","Ruby `NoMethodError` error type."],["NotImplementedError","Ruby `NotImplementedError` error type."],["RangeError","Ruby `RangeError` error type."],["RegexpError","Ruby `RegexpError` error type."],["RuntimeError","Ruby `RuntimeError` error type."],["ScriptError","Ruby `ScriptError` error type."],["SecurityError","Ruby `SecurityError` error type."],["SignalException","Ruby `SignalException` error type."],["StandardError","Ruby `StandardError` error type."],["StopIteration","Ruby `StopIteration` error type."],["SyntaxError","Ruby `SyntaxError` error type."],["SystemCallError","Ruby `SystemCallError` error type."],["SystemExit","Ruby `SystemExit` error type."],["SystemStackError","Ruby `SystemStackError` error type."],["ThreadError","Ruby `ThreadError` error type."],["TypeError","Ruby `TypeError` error type."],["UncaughtThrowError","Ruby `UncaughtThrowError` error type."],["ZeroDivisionError","Ruby `ZeroDivisionError` error type."]],"trait":[["BoxUnboxVmValue",""],["CoerceToNumeric","Coerce Ruby values to native numerics (floats and integers)."],["Convert","Infallible conversion between two types."],["ConvertMut","Mutable infallible conversion between two types."],["File","Rust extension hook that can be required."],["HeapAllocatedData",""],["TryConvert","Fallible conversions between two types."],["TryConvertMut","Mutable fallible conversions between two types."]],"type":[["InitializeResult","Type alias for errors returned from `init` functions in `extn`."]]};